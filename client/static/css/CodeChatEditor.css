/* <details>
    <summary>License</summary>
    <p>Copyright (C) 2022 Bryan A. Jones.</p>
    <p>This file is part of the CodeChat Editor.</p>
    <p>The CodeChat Editor is free software: you can redistribute it and/or
        modify it under the terms of the GNU General Public License as
        published by the Free Software Foundation, either version 3 of the
        License, or (at your option) any later version.</p>
    <p>The CodeChat Editor is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
        General Public License for more details.</p>
    <p>You should have received a copy of the GNU General Public License
        along with the CodeChat Editor. If not, see <a
            href="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</a>.
    </p>
</details>
<h1><code>CodeChatEditor.css</code> &mdash; Styles for the CodeChat Editor
</h1>
<p>This stylesheet is used by the HTML generated by <a
        href="..\..\src\CodeChatEditor.mts">CodeChatEditor.mts</a>.</p>
<p>TODO: do a much better job of grouping common styles. Rename styles based
    on whether they style a code or doc block.</p>
<h2>Styles for the entire page layout</h2>
<p>This is used only to store a reused variable value. See the <a
        href="https://drafts.csswg.org/css-variables/">CSS docs</a>.</p> */
:root {
    --top-height: 6.7rem;
    --body-padding: 0.2rem;
}

/* <p>See <a href="https://css-tricks.com/box-sizing/">box sizing</a> for the
    following technique to use <code>border-box</code> sizing.</p> */
html {
    box-sizing: border-box;
}

*,
*:before,
*:after {
    box-sizing: inherit;
}

body {
    /* <p>For box model simplicity, switch the padding and margin.</p> */
    padding: var(--body-padding);
    margin: 0px;
    /* <p>The default of transparent makes VS Code's black show up and confuse
    everything. For now, make it white.</p> */
    background: white;
}

/* <p>Provide space at the top of the screen for the filename and TinyMCE menu
    bar.</p> */
#CodeChat-top {
    height: var(--top-height);
}

/* <p>The rest of the screen is the editor area.</p> */
#CodeChat-body {
    height: calc(100vh - var(--top-height) - 2 * var(--body-padding));
    overflow: auto;
}

/* <h2>Misc styling</h2>
<p>Mark a hotkey.</p> */
.CodeChat-hotkey {
    text-decoration: underline;
}

/* <p>Make the filename compact.</p> */
#CodeChat-filename p {
    margin: 0px;
    white-space: nowrap;
}

/* <h2>Doc block styling</h2> */
.CodeChat-doc {
    /* <p>Use <a
        href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox">flexbox
        layout</a> to style doc blocks. The goal of this layout is:</p>
<p>&lt;max line number spaces&gt; &lt;padding to match the ACE editor&gt;
    &lt;doc block indent&gt; &lt;doc block contents&gt;</p>
<p>where:</p>
<ul>
    <li><code>&lt;div class="CodeChat-ACE-gutter-padding"&gt;</code>
        contains &lt;max line number spaces&gt;</li>
    <li><code>&lt;div class="CodeChat-ACE-padding"&gt;</code> contains
        &lt;padding to match the ACE editor&gt;</li>
    <li><code>&lt;div class="CodeChat-doc-indent"&gt;</code> contains
        &lt;doc block indent&gt;</li>
    <li><code>&lt;div class="CodeChat-TinyMCE"&gt;</code> contains the
        &lt;doc block contents&gt;</li>
</ul> */
    display: flex;
    padding: 0px 2px 0px 6px;
}

/* <p>Preserve whitespace in the indent of a doc block.</p> */
.CodeChat-doc-indent {
    /* <p>Make this &lt;doc block indent&gt; not expand or shrink, but take
    exactly the width required by the text (spaces) it contains.</p> */
    flex: 0 0 auto;
    white-space: pre;
    tab-size: 4;
}

/* Reset what CodeMirror messes up for doc blocks. */
.CodeChat-doc-contents {
    font-family: auto;
    line-height: initial;
    white-space: normal;
    flex-grow: 1;
}

/* <p>Remove the editor's border when it's selected, since this hides the cursor
    when the cursor is at the beginning of a line and isn't necessary (the
    entire screen is an editor, not just that region.) Note that the <code>focus-visible</code> attribute is only visible briefly, but this eliminated that visual flicker.</p> */
.CodeChat-doc-contents.mce-edit-focus,
.CodeChat-doc-contents:focus-visible {
    outline-width: 0px;
}

/* <h2>Combined code/doc block styling</h2>
<p><span id="remove-space">Remove space between a code block followed by a
        doc block. Doc block elements typically have top margin and/or
        padding that produce this undesired space; remove it on the first
        element in the doc block, the first element of the first element in
        the doc block, etc.</span></p> */
.CodeChat-doc-contents > *:first-child,
.CodeChat-doc-contents > *:first-child > *:first-child,
.CodeChat-doc-contents > *:first-child > *:first-child > *:first-child,
.CodeChat-doc-contents
    > *:first-child
    > *:first-child
    > *:first-child
    > *:first-child,
.CodeChat-doc-contents
    > *:first-child
    > *:first-child
    > *:first-child
    > *:first-child
    > *:first-child {
    margin-top: 0px;
    padding-top: 0px;
}

/* <p><a href="remove-space">Remove space</a> between a doc block followed by a
    code block.</p> */
.CodeChat-doc-contents > *:last-child,
.CodeChat-doc-contents > *:last-child > *:last-child,
.CodeChat-doc-contents > *:last-child > *:last-child > *:last-child,
.CodeChat-doc-contents
    > *:last-child
    > *:last-child
    > *:last-child
    > *:last-child,
.CodeChat-doc-contents
    > *:last-child
    > *:last-child
    > *:last-child
    > *:last-child
    > *:last-child {
    margin-bottom: 0px;
    padding-bottom: 0px;
}
